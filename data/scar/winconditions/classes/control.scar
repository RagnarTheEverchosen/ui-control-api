Import_Once('WinConditions/classes/Color.scar')

Control = Class()

function Control:constructor()
	-- Define Instance Variables
	self._path = ''
	self._name = ''
	self._x = 0
	self._y = 0
	self._width = 0
	self._height = 0
	self._color = nil
	self._children = {}
end

function Control:getPath()
	return self._path
end

function Control:setPath(path)
	if (path == '') then
		self._path = self._name
	else
		self._path = path .. '.' .. self._name
	end

	return self
end

function Control:getName()
	return self._name
end

function Control:setName(name)
	self._name = name

	return self
end

function Control:getX()
	return self._x
end

function Control:getY()
	return self._y
end

function Control:setLocation(x, y)
	self._x = x
	self._y = y

	if (self._path ~= '') then
		UI_ControlSetRect(self._path, self._x, self._y, self._width, self._height)
	end

	return self
end

function Control:getWidth()
	return self._width
end

function Control:getHeight()
	return self._height
end

function Control:setSize(width, height)
	self._width = width
	self._height = height

	if (self._path ~= '') then
		UI_ControlSetRect(self._path, self._x, self._y, self._width, self._height)
	end

	return self
end

function Control:setBounds(x, y, width, height)
	self._x = x
	self._y = y
	self._width = width
	self._height = height

	if (self._path ~= '') then
		UI_ControlSetRect(self._path, self._x, self._y, self._width, self._height)
	end

	return self
end

function Control:getColor()
	return self._color
end

function Control:setColor(color)
	self._color = color

	if (self._path ~= '' and self._color) then
		UI_ControlSetColour(self._path, self._color:getRed(), self._color:getGreen(), self._color:getBlue(), self._color:getAlpha())
	end

	return self
end

function Control:getChildren()
	return self._children
end

function Control:has(child)
	for i,_child in ipairs(self._children) 
	do 
		if _child == child then 
			return true
		end 
	end 

	return false
end 

function Control:add(child)
	child:setParent(public)
	
	if (self._path ~= '') then
		child:_onAdd(self._path)
	end
	
	table.insert(self._children, child)
end

function Control:_onAdd(path) 
	self:setPath(path)
end

function Control:clear()
	self._children = {}

	if (self._path ~= '') then
		UI_ControlClear(self._path)
	end
end

function Control:remove(child)
	for i,_child in ipairs(self._children)
	do
		if _child == child then
			self._children[i] = nil
			break
		end
	end

	UI_ControlRemove(child:getPath())
end

function Control:getParent()
	return self._parent
end

function Control:setParent(parent)
	self._parent = parent
end